# Generated by Django 4.2.11 on 2024-08-01 10:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200, verbose_name='カテゴリ名')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='作成日時')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=200, verbose_name='店舗名')),
                ('budget', models.PositiveIntegerField(verbose_name='予算')),
                ('information', models.TextField(verbose_name='店舗説明')),
                ('img', models.ImageField(blank=True, default='noImage.png', upload_to='', verbose_name='店舗画像')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='作成日時')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='住所')),
                ('tel', models.CharField(blank=True, max_length=100, null=True, verbose_name='電話番号')),
                ('open_time', models.TimeField(default='09:00:00', verbose_name='開店時間')),
                ('close_time', models.TimeField(default='21:00:00', verbose_name='閉店時間')),
                ('closed_monday', models.BooleanField(default=False, verbose_name='月曜定休')),
                ('closed_tuesday', models.BooleanField(default=False, verbose_name='火曜定休')),
                ('closed_wednesday', models.BooleanField(default=False, verbose_name='水曜定休')),
                ('closed_thursday', models.BooleanField(default=False, verbose_name='木曜定休')),
                ('closed_friday', models.BooleanField(default=False, verbose_name='金曜定休')),
                ('closed_saturday', models.BooleanField(default=False, verbose_name='土曜定休')),
                ('closed_sunday', models.BooleanField(default=False, verbose_name='日曜定休')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nagoyameshi.category')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=100, verbose_name='名前')),
                ('email', models.CharField(max_length=100, unique=True, verbose_name='メールアドレス')),
                ('password', models.CharField(max_length=100, verbose_name='パスワード')),
                ('vip_member', models.BooleanField(default=False, verbose_name='有料会員ステータス')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='作成日時')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
